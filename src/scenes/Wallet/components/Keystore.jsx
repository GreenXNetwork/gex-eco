import React, { Component } from 'react';
import { injectIntl } from 'react-intl';
import { Upload, Icon, Input, Button, message } from 'antd';

import Web3 from 'web3';

const { Dragger } = Upload;

const web3 = new Web3(Web3.givenProvider || 'wss://ropsten.infura.io/ws');

let keystore = null;

const props = {
    name: 'file',
    multiple: false,
    beforeUpload: file => {
        const reader = new FileReader();
        reader.readAsText(file);
        reader.onload = () => {
            /** keystore generated by MEW is not standard, change the property 'Cryto' to lowercase 'cryto'  */
            // example:
            // {"version":3,"id":"457dd02f-9bf9-40f7-8694-a19e80044b7d","address":"ec5122fcec0e5296ace60e98a663005c9438eb8d","crypto":{"ciphertext":"d0f4c7dd640412ddc11f6598c35691969383db0616388d302d46e32d39161730","cipherparams":{"iv":"0e4de562bfe560e0ab2adbe1376db8ab"},"cipher":"aes-128-ctr","kdf":"scrypt","kdfparams":{"dklen":32,"salt":"ad074f0a77558a354976d3edd1a0acb1d8dd6ee7b482b7b9baea7edb12602466","n":8192,"r":8,"p":1},"mac":"da1d6b1385cb810ffac850a74c9bca11e63bcf49a2d793152b2047cb2a3da6c3"}}
            keystore = JSON.parse(reader.result);
            if (keystore.Crypto) {
                keystore = { ...keystore, crypto: keystore.Crypto };
            }
        };
        return false; // return false to stop ANTD from doing a POST request
    },
};

class Keystore extends Component {
    state = {
        value: '',
    };

    handleSubmit = e => {
        e.preventDefault();
        if (!keystore) {
            message.error('No file uploaded!');
            return;
        }
        const { value } = this.state;
        try {
            // create account from keystore
            const account = web3.eth.accounts.decrypt(keystore, value);

            if (typeof account.signTransaction === 'function') {
                // store account in store
                const { dispatch } = this.props;
                dispatch({
                    type: 'wallet/setAccount',
                    account,
                });
            }
        } catch (ex) {
            message.error(ex);
        }
    };

    handleChange = e => {
        this.setState({
            value: e.target.value,
        });
    };

    render() {
        const { value } = this.state;

        return (
            <div>
                <b>Select your Wallet file</b> <br />
                <Icon type="warning" theme="twoTone" />
                <i>
                    This is <b style={{ color: '#cf1322' }}>not</b> a recommended way to access your
                    wallet.
                </i>
                <p />
                <p>
                    Entering your private key on a website dangerous. If our website is compromised
                    or you accidentally visit a different website, your funds will be stolen.
                </p>
                <br />
                <Dragger {...props}>
                    <p className="ant-upload-drag-icon">
                        <Icon type="inbox" />
                    </p>
                    <p className="ant-upload-text">Click or drag keystore file to this area</p>
                </Dragger>
                <Input
                    value={value}
                    onChange={this.handleChange}
                    placeholder="Enter password"
                    onPressEnter={this.handleSubmit}
                    type="password"
                />
                <Button type="primary" onClick={this.handleSubmit}>
                    Create Account
                </Button>
            </div>
        );
    }
}

export default injectIntl(Keystore, { withRef: true });
